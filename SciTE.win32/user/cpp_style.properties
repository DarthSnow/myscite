# Define user editable custom Styles for cpp lexer
IF theme.white
	# Block comment
	style.cpp.1=fore:#008000
	# Line comment
	style.cpp.2=fore:#008000
	# Doc comment 
	style.cpp.3=fore:#008000
	# Number
	style.cpp.4=fore:#005F1F,back:#FFF0FF
	# Keyword
	style.cpp.5=fore:#002070
	# (Double quoted) String
	#style.cpp.6=fore:#952812
	style.cpp.6=fore:#005F1F
	# Character (Single quoted string)
	style.cpp.7=fore:#952812
	# Literal string
	style.cpp.8=fore:#952812,back:#E0FFFF,bold
	# Preprocessor (obsolete in Lua 4.0 and up)
	style.cpp.9=fore:#000099
	# Operators
	style.cpp.10=fore:#666555,bold
	# Identifier (everything else...)
	style.cpp.11=fore:#010110,outline
	# End of line where string is not closed
	style.cpp.12=back:#FFC0C0
	# Verbatim strings for C#
	style.cpp.13=$(style.cpp.5),back:#F5FFF5
	# Regular expressions for JavaScript
	style.cpp.14=$(style.cpp.5),back:#F5F5FF
	# Doc Comment Line: line comments beginning with /// or //!.
	style.cpp.15=$(style.cpp.5),back:#FFF5F5
	# Style 16 for keywords 2
	style.cpp.16=fore:#000099
	# Comment keyword
	style.cpp.17=$(style.cpp.5),back:#FFFFF5
	# Comment keyword error
	style.cpp.18=$(style.cpp.5),back:#FFA0A0

	## Global class
	# Style for keywords 4 objects, selectors
	style.cpp.19=fore:#000444
	# Raw strings for C++0x
	style.cpp.20=$(colour.string),back:#FFF3FF,eolfilled
	# Triple-quoted strings for Vala
	style.cpp.21=$(font.monospace),fore:#007F00,back:#E0FFE0,eolfilled
	# Hash-quoted strings for Pike
	style.cpp.22=$(font.monospace),fore:#007F00,back:#E7FFD7,eolfilled
	# Preprocessor stream comment
	style.cpp.23=fore:#659900
	# Preprocessor stream doc comment
	style.cpp.24=$(colour.code.comment.doc)
	# User defined literals
	style.cpp.25=fore:#C06000
	# Task Marker
	style.cpp.26=fore:#BE07FF,$(font.code.comment.line)
	# Escape sequence
	style.cpp.27=$(colour.string)
