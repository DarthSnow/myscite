2 ; w2xk8y0c(v=vs.94) ; 9 ; JavaScript Operators ; Addition ; (result,expression) ; Adds the value of an expression to the value of a variable and assigns the result to the variable. ; https://msdn.microsoft.com/en-us/library/w2xk8y0c(v=vs.94).aspx ; 
2 ; wwfws59w(v=vs.94) ; 9 ; JavaScript Operators ; Addition ; (result,expression1,expression2) ; Adds the value of one numeric expression to another, or concatenates two strings. ; https://msdn.microsoft.com/en-us/library/wwfws59w(v=vs.94).aspx ; 
2 ; 1w2h1k9x(v=vs.94) ; 9 ; JavaScript Operators ; Assignment ; (result,expression) ; Assigns a value to a variable. ; https://msdn.microsoft.com/en-us/library/1w2h1k9x(v=vs.94).aspx ; 
2 ; a9h8y72a(v=vs.94) ; 9 ; JavaScript Operators ; Bitwise ; (result,expression) ; Sets the result of a bitwise AND operation on the value of a variable and the value of an expression. The variable and the expression are treated as 32-bit integers. ; https://msdn.microsoft.com/en-us/library/a9h8y72a(v=vs.94).aspx ; 
2 ; dazfy1f3(v=vs.94) ; 9 ; JavaScript Operators ; Bitwise ; (result,expression1,expression2) ; Performs a bitwise AND operation on two 32-bit expressions. ; https://msdn.microsoft.com/en-us/library/dazfy1f3(v=vs.94).aspx ; 
2 ; t7f48wx9(v=vs.94) ; 9 ; JavaScript Operators ; Bitwise ; (result,expression1,expression2) ; Left shifts the bits of an expression. ; https://msdn.microsoft.com/en-us/library/t7f48wx9(v=vs.94).aspx ; 
2 ; zf9s465t(v=vs.94) ; 9 ; JavaScript Operators ; Bitwise ; (result,expression) ; Performs a bitwise NOT (negation) on an expression. ; https://msdn.microsoft.com/en-us/library/zf9s465t(v=vs.94).aspx ; 
2 ; 81bads72(v=vs.94) ; 9 ; JavaScript Operators ; Bitwise ; (result,expression) ; Performs a bitwise OR on the value of a variable and the value of an expression and assigns the result to the variable. ; https://msdn.microsoft.com/en-us/library/81bads72(v=vs.94).aspx ; 
2 ; 066h456z(v=vs.94) ; 9 ; JavaScript Operators ; Bitwise ; (result,expression1,expression2) ; Performs a bitwise OR on two expressions. ; https://msdn.microsoft.com/en-us/library/066h456z(v=vs.94).aspx ; 
2 ; 5s9e947e(v=vs.94) ; 9 ; JavaScript Operators ; Bitwise ; (result,expression1,expression2) ; Right shifts the bits of an expression, maintaining sign. ; https://msdn.microsoft.com/en-us/library/5s9e947e(v=vs.94).aspx ; 
2 ; 06f6ta51(v=vs.94) ; 9 ; JavaScript Operators ; Bitwise ; (result,expression) ; Performs a bitwise exclusive OR on a variable and an expression and assigns the result to the variable. ; https://msdn.microsoft.com/en-us/library/06f6ta51(v=vs.94).aspx ; 
2 ; ece515h6(v=vs.94) ; 9 ; JavaScript Operators ; Bitwise ; (result,expression1,expression2) ; Performs a bitwise exclusive OR on two expressions. ; https://msdn.microsoft.com/en-us/library/ece515h6(v=vs.94).aspx ; 
2 ; 9b37css7(v=vs.94) ; 9 ; JavaScript Operators ; Comma ; (expression1,expression2) ; Causes two expressions to be executed sequentially. ; https://msdn.microsoft.com/en-us/library/9b37css7(v=vs.94).aspx ; 
2 ; ky6fyhws(v=vs.94) ; 9 ; JavaScript Operators ; Comparison ; (expression1,comparisonoperator,expression2) ; Returns a Boolean value indicating the result of the comparison. ; https://msdn.microsoft.com/en-us/library/ky6fyhws(v=vs.94).aspx ; 
2 ; what800t(v=vs.94) ; 9 ; JavaScript Operators ; Compound ; () ; The following table lists JavaScript assignment operators. ; https://msdn.microsoft.com/en-us/library/what800t(v=vs.94).aspx ; 
2 ; be21c7hw(v=vs.94) ; 9 ; JavaScript Operators ; Conditional ; (test,expression1,expression2) ; Returns one of two expressions depending on a condition. ; https://msdn.microsoft.com/en-us/library/be21c7hw(v=vs.94).aspx ; 
2 ; 2b2z052x(v=vs.94) ; 9 ; JavaScript Operators ; delete ; () ; Deletes a property from an object, or removes an element from an array. ; https://msdn.microsoft.com/en-us/library/2b2z052x(v=vs.94).aspx ; delete expression
2 ; cfyydsaa(v=vs.94) ; 9 ; JavaScript Operators ; Division ; (result,expression) ; Divides the value of a variable by the value of an expression and assigns the result to the variable. ; https://msdn.microsoft.com/en-us/library/cfyydsaa(v=vs.94).aspx ; 
2 ; w8z179xh(v=vs.94) ; 9 ; JavaScript Operators ; Division ; (result,number1,number2) ; Divides the value of two expressions. ; https://msdn.microsoft.com/en-us/library/w8z179xh(v=vs.94).aspx ; 
2 ; 9k25hbz2(v=vs.94) ; 9 ; JavaScript Operators ; in ; (result,property,object) ; Tests for the existence of a property in an object. ; https://msdn.microsoft.com/en-us/library/9k25hbz2(v=vs.94).aspx ; \t\nresult = property in object
2 ; 26k41698(v=vs.94) ; 9 ; JavaScript Operators ; Increment ; (result,variable) ; The increment operator increments, and the decrement operator decrements the value of a variable by one. ; https://msdn.microsoft.com/en-us/library/26k41698(v=vs.94).aspx ; 
2 ; zh0zb36z(v=vs.94) ; 9 ; JavaScript Operators ; instanceof ; (result,object,class) ; Returns a Boolean value that indicates whether or not an object is an instance of a particular class. ; https://msdn.microsoft.com/en-us/library/zh0zb36z(v=vs.94).aspx ; \t\nresult = object instanceof class
2 ; 2027xe5w(v=vs.94) ; 9 ; JavaScript Operators ; Left ; (result,expression) ; Moves the specified number of bits to the left and assigns the result to result. The bits vacated by the operation are filled with 0. ; https://msdn.microsoft.com/en-us/library/2027xe5w(v=vs.94).aspx ; 
2 ; 719e8e30(v=vs.94) ; 9 ; JavaScript Operators ; Logical ; (result,expression1,expression2) ; Performs a logical conjunction on two expressions. ; https://msdn.microsoft.com/en-us/library/719e8e30(v=vs.94).aspx ; 
2 ; zz722703(v=vs.94) ; 9 ; JavaScript Operators ; Logical ; (result,expression) ; Performs logical negation on an expression. ; https://msdn.microsoft.com/en-us/library/zz722703(v=vs.94).aspx ; 
2 ; xxxekd04(v=vs.94) ; 9 ; JavaScript Operators ; Logical ; (result,expression1,expression2) ; Performs a logical disjunction on two expressions. ; https://msdn.microsoft.com/en-us/library/xxxekd04(v=vs.94).aspx ; 
2 ; ff3sz136(v=vs.94) ; 9 ; JavaScript Operators ; Modulus ; (result,expression) ; Divides the value of a variable by the value of an expression, and assigns the remainder to the variable. ; https://msdn.microsoft.com/en-us/library/ff3sz136(v=vs.94).aspx ; 
2 ; 9f59bza0(v=vs.94) ; 9 ; JavaScript Operators ; Modulus ; (result,number1,number2) ; Divides the value of one expression by the value of another, and returns the remainder. ; https://msdn.microsoft.com/en-us/library/9f59bza0(v=vs.94).aspx ; 
2 ; yhecb1ct(v=vs.94) ; 9 ; JavaScript Operators ; Multiplication ; (result,expression) ; Multiplies the value of a variable by the value of an expression and assigns the result to the variable. ; https://msdn.microsoft.com/en-us/library/yhecb1ct(v=vs.94).aspx ; 
2 ; s0f51f9b(v=vs.94) ; 9 ; JavaScript Operators ; Multiplication ; (result,number1,number2) ; Multiplies the value of two expressions. ; https://msdn.microsoft.com/en-us/library/s0f51f9b(v=vs.94).aspx ; 
2 ; ec3z6dcc(v=vs.94) ; 9 ; JavaScript Operators ; new ; (constructor,arguments) ; Creates a new object. ; https://msdn.microsoft.com/en-us/library/ec3z6dcc(v=vs.94).aspx ; new constructor ([arguments]) 
2 ; 7fd7s4a7(v=vs.94) ; 9 ; JavaScript Operators ; Right ; (result,expression) ; Right shifts the value of a variable by the number of bits specified in the value of an expression, maintaining the sign, and assigns the result to the variable. ; https://msdn.microsoft.com/en-us/library/7fd7s4a7(v=vs.94).aspx ; 
2 ; dn919259(v=vs.94) ; 9 ; JavaScript Operators ; Spread ; (iterable,arg0ToN,args) ; Allows parts of an array literal to be initialized from an iterable expression (such as another array literal), or allows an expression to be expanded to multiple arguments (in function calls).  ; https://msdn.microsoft.com/en-us/library/dn919259(v=vs.94).aspx ; 
2 ; dtx39exz(v=vs.94) ; 9 ; JavaScript Operators ; Subtraction ; (result,expression) ; Subtracts the value of an expression from the value of a variable and assigns the result to the variable. ; https://msdn.microsoft.com/en-us/library/dtx39exz(v=vs.94).aspx ; 
2 ; 9ty8kw3w(v=vs.94) ; 9 ; JavaScript Operators ; Subtraction ; (result,number,number1,number2) ; Subtracts the value of one expression from another or provides unary negation of a single expression. ; https://msdn.microsoft.com/en-us/library/9ty8kw3w(v=vs.94).aspx ; 
2 ; 259s7zc1(v=vs.94) ; 9 ; JavaScript Operators ; typeof ; () ; Returns a string that identifies the data type of an expression. ; https://msdn.microsoft.com/en-us/library/259s7zc1(v=vs.94).aspx ; \t\ntypeof[(]expression[)] ,
2 ; 2ked96yw(v=vs.94) ; 9 ; JavaScript Operators ; Unsigned ; (result,expression) ; Right shifts the value of a variable by the number of bits specified in the value of an expression, without maintaining sign, and assigns the result to the variable. ; https://msdn.microsoft.com/en-us/library/2ked96yw(v=vs.94).aspx ; 
2 ; 342xfs5s(v=vs.94) ; 9 ; JavaScript Operators ; Unsigned ; (result,expression1,expression2) ; Right shifts the bits of an expression, without maintaining sign. ; https://msdn.microsoft.com/en-us/library/342xfs5s(v=vs.94).aspx ; 
2 ; e17c7cbe(v=vs.94) ; 9 ; JavaScript Operators ; void ; () ; Prevents an expression from returning a value.  ; https://msdn.microsoft.com/en-us/library/e17c7cbe(v=vs.94).aspx ; void expression 
1 ; 3xcfcb93(v=vs.94) ; 9 ; JavaScript Statements ; JavaScript ; () ; The following table lists JavaScript statements. ; https://msdn.microsoft.com/en-us/library/3xcfcb93(v=vs.94).aspx ; 
2 ; 3fhdxafb(v=vs.94) ; 9 ; JavaScript Statements ; break ; () ; Terminates the current loop, or if in conjunction with a label, terminates the associated statement.  ; https://msdn.microsoft.com/en-us/library/3fhdxafb(v=vs.94).aspx ; break [label],
2 ; 8ka90k2e(v=vs.94) ; 9 ; JavaScript Statements ; @cc_on ; () ; Activates conditional compilation support within comments in a script. **  ; https://msdn.microsoft.com/en-us/library/8ka90k2e(v=vs.94).aspx ; @cc_on 
2 ; dn802832(v=vs.94) ; 9 ; JavaScript Statements ; class ; (classname,object,constructor,arg1...argN,statements,static,method) ; Declares a new class. ; https://msdn.microsoft.com/en-us/library/dn802832(v=vs.94).aspx ; class classname () [extends object] {    [constructor([arg1 [,... [,argN]]]) {        statements    }]    [[static] method([arg1 [,... [,argN]]]) {        statements    }]}
2 ; 6s6fab9k(v=vs.94) ; 9 ; JavaScript Statements ; Comment ; () ; Causes comments to be ignored by the JavaScript parser.  ; https://msdn.microsoft.com/en-us/library/6s6fab9k(v=vs.94).aspx ; Single-line Comment:\t\n// comment 
2 ; dn251545(v=vs.94) ; 9 ; JavaScript Statements ; const ; (constant1,value1) ; Declares a block-scoped variable with a constant value. ; https://msdn.microsoft.com/en-us/library/dn251545(v=vs.94).aspx ; const constant1 = value1
2 ; 8de3fkc8(v=vs.94) ; 9 ; JavaScript Statements ; continue ; () ; Stops the current iteration of a loop, and starts a new iteration.  ; https://msdn.microsoft.com/en-us/library/8de3fkc8(v=vs.94).aspx ; continue [label],
2 ; 0bwt76sk(v=vs.94) ; 9 ; JavaScript Statements ; debugger ; () ; Suspends execution. **  ; https://msdn.microsoft.com/en-us/library/0bwt76sk(v=vs.94).aspx ; debugger
2 ; 5c1h7h0k(v=vs.94) ; 9 ; JavaScript Statements ; do...while ; (statement,expression) ; Executes a statement block once, and then repeats execution of the loop until a condition expression evaluates to false. ; https://msdn.microsoft.com/en-us/library/5c1h7h0k(v=vs.94).aspx ; 
2 ; s1cyybdf(v=vs.94) ; 9 ; JavaScript Statements ; for ; (initialization,test,increment,statement) ; Executes a block of statements for as long as a specified condition is true.  ; https://msdn.microsoft.com/en-us/library/s1cyybdf(v=vs.94).aspx ; for ([initialization], [test], [increment])\t\n   statement 
2 ; 55wb2d34(v=vs.94) ; 9 ; JavaScript Statements ; for...in ; (variable,object,,array,statements) ; Executes one or more statements for each property of an object, or each element of an array.  **  ; https://msdn.microsoft.com/en-us/library/55wb2d34(v=vs.94).aspx ; 
2 ; dn858238(v=vs.94) ; 9 ; JavaScript Statements ; for...of ; (variable,object,statements) ; Executes one or more statements for each value of an iterator obtained from an iterable object.  ; https://msdn.microsoft.com/en-us/library/dn858238(v=vs.94).aspx ; 
2 ; 4t2k5yhw(v=vs.94) ; 9 ; JavaScript Statements ; function ; (functionname,arg1...argN,statements) ; Declares a new function.  **  ; https://msdn.microsoft.com/en-us/library/4t2k5yhw(v=vs.94).aspx ; function functionname ([arg1 [, arg2 [,...[, argN]]]]) {\t\n    statements\t\n} 
2 ; 58dz2w55(v=vs.94) ; 9 ; JavaScript Statements ; @if ; (condition1,,condition2,text1,text2,text3) ; Conditionally executes a group of statements, depending on the value of an expression. **  ; https://msdn.microsoft.com/en-us/library/58dz2w55(v=vs.94).aspx ; \t\n      @if (\t\n   condition1\t\n)\t\n   text1\t\n[@elif (\t\n   condition2\t\n)\t\n   text2]\t\n[@else\t\n   text3]\t\n@end 
2 ; 85yyde5c(v=vs.94) ; 9 ; JavaScript Statements ; if...else ; (condition1,statement1,condition2,statement2,statement3) ; Conditionally executes a group of statements, depending on the value of an expression. ; https://msdn.microsoft.com/en-us/library/85yyde5c(v=vs.94).aspx ; 
2 ; d3666y5k(v=vs.94) ; 9 ; JavaScript Statements ; Labeled ; (label,statements) ; Provides an identifier for a statement. ; https://msdn.microsoft.com/en-us/library/d3666y5k(v=vs.94).aspx ; 
2 ; dn263046(v=vs.94) ; 9 ; JavaScript Statements ; let ; (variable1,value1) ; Declares a block-scoped variable. ; https://msdn.microsoft.com/en-us/library/dn263046(v=vs.94).aspx ; let variable1 = value1
2 ; 22a685h9(v=vs.94) ; 9 ; JavaScript Statements ; return ; () ; Exits from the current function and returns a value from that function. ; https://msdn.microsoft.com/en-us/library/22a685h9(v=vs.94).aspx ; \t\nreturn[(][expression][)], 
2 ; thak6fez(v=vs.94) ; 9 ; JavaScript Statements ; @set ; (varname,term) ; Creates variables used with conditional compilation statements.  **  ; https://msdn.microsoft.com/en-us/library/thak6fez(v=vs.94).aspx ; \t\n@set @varname = term 
2 ; hzc6t81t(v=vs.94) ; 9 ; JavaScript Statements ; switch ; (expression,label,statementlist) ; Enables the execution of one or more statements when a specified expression's value matches a label. ; https://msdn.microsoft.com/en-us/library/hzc6t81t(v=vs.94).aspx ; switch (expression) {\t\n    case label :\t\n        statementlist\t\n    case label :\t\n    default :\t\n        statementlist\t\n} 
2 ; w062xezx(v=vs.94) ; 9 ; JavaScript Statements ; this ; () ; Refers to the current object.  ; https://msdn.microsoft.com/en-us/library/w062xezx(v=vs.94).aspx ; this.property
2 ; 85fscz6h(v=vs.94) ; 9 ; JavaScript Statements ; throw ; () ; Generates an error condition that can be handled by a try...catch...finally statement.  ; https://msdn.microsoft.com/en-us/library/85fscz6h(v=vs.94).aspx ; throw exception 
2 ; 4yahc5d8(v=vs.94) ; 9 ; JavaScript Statements ; try...catch...finally ; (tryStatements,exception,catchStatements,finallyStatements) ; Sets up blocks of code in which errors that are thrown in one block are handled in another. Errors that are thrown inside the try block are caught in the catch block. JavaScript.  **  ; https://msdn.microsoft.com/en-us/library/4yahc5d8(v=vs.94).aspx ; 
2 ; z16cackw(v=vs.94) ; 9 ; JavaScript Statements ; var ; (variable1,value1) ; Declares a variable.  ; https://msdn.microsoft.com/en-us/library/z16cackw(v=vs.94).aspx ; var variable1 = value1
2 ; 6wsy66x9(v=vs.94) ; 9 ; JavaScript Statements ; while ; (expression,statements) ; Executes a statement or series of statements until a specified condition is false.  ; https://msdn.microsoft.com/en-us/library/6wsy66x9(v=vs.94).aspx ; while (expression) {\t\n    statements\t\n} 
2 ; b294afx9(v=vs.94) ; 9 ; JavaScript Statements ; with ; (object,statements) ; Establishes the default object for a statement.  **  ; https://msdn.microsoft.com/en-us/library/b294afx9(v=vs.94).aspx ; with (object) {\t\n    statements\t\n} 
1 ; br230271(v=vs.94) ; 9 ; JavaScript Directives ; JavaScript ; () ; The following table lists JavaScript directives. ; https://msdn.microsoft.com/en-us/library/br230271(v=vs.94).aspx ; 
2 ; br230270(v=vs.94) ; 9 ; JavaScript Directives ; use ; () ; Restricts the use of some features in JavaScript. Supported in Internet Explorer 10 and Windows 8.x Store apps only. ; https://msdn.microsoft.com/en-us/library/br230270(v=vs.94).aspx ; use strict
