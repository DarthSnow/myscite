#
# c_sharp keyword definitions for SciTE
#
##Nov 2015 extrapolated from cpp.properties. Now here to  ease maintaining
#

file.patterns.cs=*.cs
*filter.cs=cSharp ( cs )|$(file.patterns.cs)|
*source.patterns.cs=$(file.patterns.cs);

# ---- * Wildcard is used to collect marked properties
# ----  used to dynamically build the Language Menu

*language.csharp=C&#|cs||

lexer.$(file.patterns.cs)=cpp
# For C# leave lexer.cpp.verbatim.strings.allow.escapes as 0 but change to 1 for Objective C
#lexer.cpp.verbatim.strings.allow.escapes=1

keywordclass.cs=checked is new sizeof typeof unchecked abstract as auto base break case catch const continue default do else event explicit extern false finally fixed for foreach get goto if implicit in internal lock namespace null operator out override params private property protected public readonly ref return sealed set stackalloc static switch this throw true try unsafe using virtual void while

# ---- User defined special keywords use style2
keywordclass.cs2=bool byte char class decimal delegate double enum float int interface long object sbyte short string struct uint ulong ushortabs 
keywordclass.cs4=#define #elif #else #endif #endregion #error #if #line #region #undef #warning

# flow of control aka if else do loop ....
#keywords2.$(file.patterns.cs)=

keywords.$(file.patterns.cs)=$(keywordclass.cs)
keywords4.$(file.patterns.cs)=$(keywordclass.cs2) $(keywordclass.cs4)

word.chars.cs=$(chars.alpha)$(chars.numeric)_#
word.characters.$(file.patterns.cs)=$(word.chars.cs)

api.$(file.patterns.cs)= \
$(SciteDefaultHome)/languages/c_sharp.api;\
$(SciteDefaultHome)/user/languages/c_sharp.api

preprocessor.symbol.$(file.patterns.cs)=#
preprocessor.start.$(file.patterns.cs)=if region
preprocessor.middle.$(file.patterns.cs)=else elif
preprocessor.end.$(file.patterns.cs)=endif endregion

calltip.cpp.ignorecase=1

# -------- Comments
comment.block.cs=//~
comment.stream.start.cs=/*
comment.stream.end.cs=*/
comment.box.start.cs=/*
comment.box.middle.cs= *
comment.box.end.cs= */

# -------- Indentation

statement.indent.$(file.patterns.cs)=5 else elseif for function if while
indent.maintain.$(file.patterns.cs)=1
statement.end.$(file.patterns.cs)=10 ;
#statement.lookback.$(file.patterns.cs)=20
block.start.$(file.patterns.cs)=10 {
block.end.$(file.patterns.cs)=10 }
#comment.block.at.line.start.cs=1

if PLAT_WIN
	command.build.*.cs=csc /t:winexe $(FileNameExt) /r:system.dll,system.drawing.dll
	command.go.*.cs=$(FileName)
	command.go.subsystem.*.cs=0
if PLAT_GTK
	command.build.*.cs=mcs /t:winexe $(FileNameExt) /r:System,System.Drawing
	command.go.*.cs=mono $(FileName).exe
	command.go.subsystem.*.cs=1
