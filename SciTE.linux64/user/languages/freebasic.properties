# Define SciTE settings for FreeBasic files.

file.patterns.freebasic=*.bas;*.bi
filter.freebasic=FreeBasic (bb bi)|$(file.patterns.freebasic)|
*filter.freebasic=$(filter.freebasic)
*source.patterns.freebasic=$(file.patterns.freebasic);

lexer.$(file.patterns.freebasic)=freebasic
#*language.freebasic=FreeBasic|bas||

# --- Calltips ( api parameter)
api.$(file.patterns.freebasic)=\
$(SciteDefaultHome)/user/languages/freebasic_08_2017.api;

# Finally.. Freebasic Keywords...
# from: https://www.freebasic.net/wiki/wikka.php?wakka=CatPgFunctIndex
# keywords must be all lowercase

arrays=erase lbound redim preserve ubound
bits=bit bitreset bitset hibyte hiword lobyte loword
compiler_flags=defbyte defdbl defint deflng deflongint defshort defsng defstr defubyte defuint defulongint defushort option base option byval option dynamic option escape option explicit option gosub option nogosub option nokeyword option private option static
console=beep cls color csrlin locate open cons open err open pipe open scrn pos print print using using screen spc tab view width write
data=as boolean byref byte const dim double enum extends integer long longint object scope shared short single static string type ubyte uinteger ulong ulongint union unsigned ushort var with wstring zstring
datetime=date dateadd datediff datepart dateserial datevalue day hour isdate minute month monthname now second setdate settime time timeserial timevalue timer year weekday weekdayname
debug=assert assertwarn stop
err=erfn erl ermn err error local on error resume resume next
files=access append binary bload bsave close encoding eof freefile get# input# loc lock lof open output print# put# random  read write reset seek unlock write# write 
graphics=add alpha and circle cls color custom draw draw string event flip get imageconvertrow imagecreate imagedestroy imageinfo line or paint palette pcopy pmap point pointcoord preset pset pset put rgb rgba screen screencontrol screencopy screenevent screeninfo screenglproc screenlist screenlock screenptr screenres screenset screensync screenunlock trans view window xor
hardware=inp out wait open com open lpt lpos lprint
operators=mod eqv imp or xor shl shr let and or not xor andalso orelse
math=abs acos asin atan2 atn cos exp fix frac int log randomize rnd sgn sin sqr tan
memory=allocate callocate clear deallocate field fre peek poke reallocate
meta_commands=$dynamic $static $include $lang
miscellaneous=asm data end  is let offsetof option to read rem restore sizeof swap typeof
modularizing=common dylibfree dylibload dylibsymbol export extern import namespace private public using
multithread=condbroadcast condcreate conddestroy condsignal condwait mutexcreate mutexdestroy mutexlock mutexunlock threadcall threadcreate threaddetach threadwait
os=chain chdir command curdir dir end environ exec exepath fileattr filecopy filedatetime fileexists filelen isredirected kill mkdir name rmdir run setenviron shell system windowtitle
pointers=pointer procptr ptr sadd strptr varptr
macros=__date__ __date_iso__ __fb_64bit__ __fb_argc__ __fb_argv__ __fb_arm__ __fb_bigendian__ __fb_build_date__ __fb_cygwin__ __fb_darwin__ __fb_debug__ __fb_dos__ __fb_err__ __fb_freebsd__ __fb_lang__ __fb_linux__ __fb_main__ __fb_min_version__ __fb_netbsd__ __fb_openbsd__ __fb_option_byval__ __fb_option_dynamic__ __fb_option_escape__ __fb_option_explicit__ __fb_option_gosub__ __fb_option_private__ __fb_out_dll__ __fb_out_exe__ __fb_out_lib__ __fb_out_obj__ __fb_signature__ __fb_sse__ __fb_version__ __fb_ver_major__ __fb_ver_minor__ __fb_ver_patch__ __fb_win32__ __fb_xbox__ __file__ __file_nq__ __function__ __function_nq__ __fb_mt__ __line__ __path__ __time__ false true
preprocessor=#assert #define #else #elseif #endif #endmacro #error #if #ifdef #ifndef #inclib #include #libpath #lang #line #macro #pragma #print #undef defined once 
procedures=abstract alias any base  base  byref  byref  byval call cdecl const constructor constructor destructor destructor declare function function  lib naked operator overload override pascal private  protected property public  static  sub sub stdcall this va_arg va_first va_next virtual 
flow=continue case do do loop else elseif endif end if exit gosub goto if then iif is for next loop next on gosub goto return select case sleep step then until wend while wend
strng=instr instrrev lcase left len lset ltrim mid right rset rtrim space string trim ucase wspace wstring
data_conversion=asc bin chr cvd cvi cvl cvlongint cvs cvshort format hex mkd mki mkl mklongint mks mkshort oct str val vallng valint valuint valulng wbin wchr whex woct wstr cast cbool cbyte cdbl cint clng clngint cptr cshort csign csng cubyte cuint culng culngint cunsg cushort
input=getjoystick getkey getmouse inkey input line input multikey setmouse stick strig winput

keywordclass.freebasic=$(arrays) $(bits) $(console) $(datetime) $(operators) $(files) $(graphics) $(hardware) $(math) $(memory) $(miscellaneous) $(os) $(strng) $(data_conversion) $(input) $(multithread)
keywordclass.preprocessor=$(compiler_flags) $(debug) $(err) $(meta_commands) $(pointers) $(preprocessor) 

keywords.$(file.patterns.freebasic)=$(keywordclass.preprocessor)
keywords2.$(file.patterns.freebasic)=$(keywordclass.freebasic)
keywords3.$(file.patterns.freebasic)=$(flow) $(procedures) $(data) $(modularizing)
keywords4.$(file.patterns.freebasic)=$(macros)

# Default
style.freebasic.32=$(colour.default)

# White space
style.freebasic.0=$(colour.userdefinedliterals),$(colour.background)
# Comment
style.freebasic.1=$(colour.comment.line)
# Number
style.freebasic.2=$(colour.number)
# Keyword
style.freebasic.3=$(colour.keyword),$(colour.background),$(font.default)
# String
style.freebasic.4=$(colour.string),$(colour.background)
# Preprocessor (directives)
style.freebasic.5=$(colour.preproc)
# Operator
style.freebasic.6=$(colour.operator),$(colour.background)
# Identifier
style.freebasic.7=$(colour.identifier),$(colour.background)
# Date
style.freebasic.8=$(colour.number)
# End of line where string is not closed
style.freebasic.9=$(colour.eolstringnotclosed)
# keywords2
style.freebasic.10=$(colour.keyword2),$(colour.background),notbold
#keywords3
style.freebasic.11=$(colour.keyword),$(colour.background)
#keywords4
#style.freebasic.12=$(colour.globalclass),$(colour.background)
# (Dash #)
style.freebasic.13=$(colour.globalclass),$(colour.background)
style.freebasic.14=$(colour.globalclass),$(colour.background)
#attributes : 
style.freebasic.15=$(colour.keyword),$(colour.background)

